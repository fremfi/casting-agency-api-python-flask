{
	"info": {
		"_postman_id": "60c46678-20cf-4344-aa0e-5f3210e64eff",
		"name": "fremfi-casting-agency",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "casting assistant",
			"item": [
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dae77062-3844-430c-aec5-150f22dc82d1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								""
							]
						},
						"description": "get movies"
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f9e1936a-18c5-4b22-ba81-3200af8c0807",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								""
							]
						},
						"description": "get actors"
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3190cea-0b5c-4492-969e-5ae8962e4c81",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movie object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('title')",
									"    pm.expect(jsonData).to.have.property('release_date')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						},
						"description": "get movie with id 1"
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						},
						"description": "get actor with id 1"
					},
					"response": []
				},
				{
					"name": "/movies",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Hustlers\",\n\t\"release_date\": \"2019-08-10\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								""
							]
						},
						"description": "create a new movie"
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ca3abaf6-3fa5-4d91-9c6b-75835e8cd40a",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Rainbow Johnson\",\n\t\"age\": 30,\n\t\"gender\": \"FEMALE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								""
							]
						},
						"description": "create a new actor"
					},
					"response": []
				},
				{
					"name": "/movies/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8aee6c1-ee22-49c0-ab9c-50324484fc47",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Hustlers 2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						},
						"description": "update movie with id 2"
					},
					"response": []
				},
				{
					"name": "/actors/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8aee6c1-ee22-49c0-ab9c-50324484fc47",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Cynthia Johnson\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"2"
							]
						},
						"description": "update actor with id 2"
					},
					"response": []
				},
				{
					"name": "/movies/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8aee6c1-ee22-49c0-ab9c-50324484fc47",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						},
						"description": "delete movie with id 2"
					},
					"response": []
				},
				{
					"name": "/actors/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8aee6c1-ee22-49c0-ab9c-50324484fc47",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						},
						"description": "delete actor with id 2"
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik1qWTNOalV4TnpCRE1FWXpRalJEUTBRelF6VkRSVGMwUWpNM1F6aEVRak01TnpBM1JqVXpRdyJ9.eyJpc3MiOiJodHRwczovL2ZyZW1maS5hdXRoMC5jb20vIiwic3ViIjoiZ29vZ2xlLW9hdXRoMnwxMDUyMjg5MDQwMDM2NDQ5NTQ2MzUiLCJhdWQiOlsiY2FzdGluZ2FnZW5jeWF1dGgiLCJodHRwczovL2ZyZW1maS5hdXRoMC5jb20vdXNlcmluZm8iXSwiaWF0IjoxNTcyMTgzODY3LCJleHAiOjE1NzIxOTEwNjcsImF6cCI6IlV4TnZpeWI4dHlIZWgxZEkwWHNrMjlqejA2ZFFFVGVhIiwic2NvcGUiOiJvcGVuaWQgcHJvZmlsZSBlbWFpbCIsInBlcm1pc3Npb25zIjpbImdldDphY3RvcnMiLCJnZXQ6bW92aWVzIl19.ufxlJo6lE1ALQfIaSZA_U6Nfr995rfnEaNmeu_ZkH2pTGw4dT5fUdNE5b-wsIIdYZ1ctV9lvCVdgnp6HaagCa2YbRG_AafxH2tPKnnryFWrPRPknhU_8njI6Qu1qIcHRuMO2aceAzj7memzVr7ZrcEaEZxf90_z8elBWqdBHrk6RfOf_Re7K5G25iHfLceKW1yRhlyO0XtO-FQEZ0HLeLwfBkCWDDL6pyp4vqXskk_dD0unorvyQRCBkZVdNqDSrcsCsYhkNeJf0jUy5ijKHxcM6f3dCcR34cgwd9LPFJc9_fTHVlUJSRzw8fup2IXxADd3O87MPiGhc9j9twcSW7Q",
						"type": "string"
					}
				]
			},
			"protocolProfileBehavior": {}
		},
		{
			"name": "casting director",
			"item": [
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dae77062-3844-430c-aec5-150f22dc82d1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								""
							]
						},
						"description": "get movies"
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f9e1936a-18c5-4b22-ba81-3200af8c0807",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								""
							]
						},
						"description": "get actors"
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3190cea-0b5c-4492-969e-5ae8962e4c81",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movie object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('title')",
									"    pm.expect(jsonData).to.have.property('release_date')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						},
						"description": "get movie with id 1"
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "109809e9-a846-4c18-9901-633d7d3b9975",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actor object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('name')",
									"    pm.expect(jsonData).to.have.property('age')",
									"    pm.expect(jsonData).to.have.property('gender')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						},
						"description": "get actor with id 1"
					},
					"response": []
				},
				{
					"name": "/movies",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Hustlers\",\n\t\"release_date\": \"2019-08-10\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								""
							]
						},
						"description": "create a new movie"
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ca3abaf6-3fa5-4d91-9c6b-75835e8cd40a",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Dwayne Johnson\",\n\t\"age\": 40,\n\t\"gender\": \"MALE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								""
							]
						},
						"description": "create a new actor"
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8aee6c1-ee22-49c0-ab9c-50324484fc47",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movie object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Hustlers 2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						},
						"description": "update movie with id 1"
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8aee6c1-ee22-49c0-ab9c-50324484fc47",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actor object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Cynthia Johnson\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						},
						"description": "update actor with id 1"
					},
					"response": []
				},
				{
					"name": "/movies/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8aee6c1-ee22-49c0-ab9c-50324484fc47",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						},
						"description": "delete movie with id 2"
					},
					"response": []
				},
				{
					"name": "/actors/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8aee6c1-ee22-49c0-ab9c-50324484fc47",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"2"
							]
						},
						"description": "delete actor with id 2"
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik1qWTNOalV4TnpCRE1FWXpRalJEUTBRelF6VkRSVGMwUWpNM1F6aEVRak01TnpBM1JqVXpRdyJ9.eyJpc3MiOiJodHRwczovL2ZyZW1maS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWRhZDMxYWRjNDFmMDAwZGY0ZGNjYWUyIiwiYXVkIjoiY2FzdGluZ2FnZW5jeWF1dGgiLCJpYXQiOjE1NzIxODM2NTQsImV4cCI6MTU3MjE5MDg1NCwiYXpwIjoiVXhOdml5Yjh0eUhlaDFkSTBYc2syOWp6MDZkUUVUZWEiLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImNyZWF0ZTphY3RvciIsImRlbGV0ZTphY3RvciIsImdldDphY3RvcnMiLCJnZXQ6bW92aWVzIiwidXBkYXRlOmFjdG9yIiwidXBkYXRlOm1vdmllIl19.DU-xJkdsFLPLjlFF6tAD9aYvfQ4CThKhUfFZ6K9FhPLKT1Jf4OKi4623B9efZGv1sSQVplAO3NBUd4rnSgj5rHRZujVP4Lvr0QFZqb2W4bvHP0MLGf1BGkmEpmdXkxOtOTW_NS7UPnvA7gG7Op2F1-zV-uDKaGB5H7gA8MyMStAQ3KZkxDfllKIiPpQDEw62U08JAedvpG2r6P203WZhPrmL8BFsOrjm_MVYVPQTLXsa-IYEwkdfAc4oY1OwCy23SJPKBrWGxvkf72oQfitXWdNznKcf3eKTY9hSIA-T69Nd8o7rpwTqbUEfJsookGGstk3hEywc14JM2J3z7smucw",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "010662cf-cf23-4ec0-90c6-c759b18747ca",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "433b0803-780e-417a-b09e-f3b41e6b357c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "executive director",
			"item": [
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dae77062-3844-430c-aec5-150f22dc82d1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								""
							]
						},
						"description": "get movies"
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f9e1936a-18c5-4b22-ba81-3200af8c0807",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								""
							]
						},
						"description": "get actors"
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3190cea-0b5c-4492-969e-5ae8962e4c81",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movie object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('title')",
									"    pm.expect(jsonData).to.have.property('release_date')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						},
						"description": "get movie with id 1"
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f4ca48c4-99f0-441f-a16e-a2415f96d886",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actor object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('name')",
									"    pm.expect(jsonData).to.have.property('age')",
									"    pm.expect(jsonData).to.have.property('gender')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						},
						"description": "get actor with id 1"
					},
					"response": []
				},
				{
					"name": "/movies",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Hustlers\",\n\t\"release_date\": \"2019-08-10\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								""
							]
						},
						"description": "create a new movie"
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ca3abaf6-3fa5-4d91-9c6b-75835e8cd40a",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Dwayne Johnson\",\n\t\"age\": 40,\n\t\"gender\": \"MALE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								""
							]
						},
						"description": "create a new actor"
					},
					"response": []
				},
				{
					"name": "/movies/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8aee6c1-ee22-49c0-ab9c-50324484fc47",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Hustlers 2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"2"
							]
						},
						"description": "update movie with id 2"
					},
					"response": []
				},
				{
					"name": "/actors/3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8aee6c1-ee22-49c0-ab9c-50324484fc47",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Cynthia Johnson\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						},
						"description": "update actor with id 3"
					},
					"response": []
				},
				{
					"name": "/movies/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8aee6c1-ee22-49c0-ab9c-50324484fc47",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"2"
							]
						},
						"description": "delete movie with id 2"
					},
					"response": []
				},
				{
					"name": "/actors/3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8aee6c1-ee22-49c0-ab9c-50324484fc47",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"2"
							]
						},
						"description": "delete actor with id 3"
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik1qWTNOalV4TnpCRE1FWXpRalJEUTBRelF6VkRSVGMwUWpNM1F6aEVRak01TnpBM1JqVXpRdyJ9.eyJpc3MiOiJodHRwczovL2ZyZW1maS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWRiNGM0NjBlOWMwNzQwZDYxMzczYWQ5IiwiYXVkIjoiY2FzdGluZ2FnZW5jeWF1dGgiLCJpYXQiOjE1NzIxODc2NDYsImV4cCI6MTU3MjE5NDg0NiwiYXpwIjoiVXhOdml5Yjh0eUhlaDFkSTBYc2syOWp6MDZkUUVUZWEiLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImNyZWF0ZTphY3RvciIsImNyZWF0ZTptb3ZpZSIsImRlbGV0ZTphY3RvciIsImRlbGV0ZTptb3ZpZSIsImdldDphY3RvcnMiLCJnZXQ6bW92aWVzIiwidXBkYXRlOmFjdG9yIiwidXBkYXRlOm1vdmllIl19.SNzqtGmDDaGwEDrtzwrFe09CbUocAJ7vMrKY-xqw6o6BvDCruI4axV2x-mqEQLmYbsxQRyaMaCnPP5pHWK5DZjlSYaGjcIf0SUOTlK5v-CqGoeieQ4HW9ua0uFyfFmwKB6UqeI-2tyy03mEcfGlkIyzU08TOT9rykyNqzo47KI-NWJzSoUjyJ-4swHaXryD8vKgSV-MxGpryLqQ1_OzYQ7BQbBl-XPI939Pkk27MbpRSJznkcQI6LfwSHniELGHZI-TC-m_2LioF_kA1YhmPsBoLAhge5LT3fFWRLL8KWLpHrUmpSsj-ufAmV_1OHsPJvDL8_1vRRwRB-ZZk9CN3jg",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "84a2c696-95e7-45cb-a8f1-5e19d3bb1b63",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8d9e8369-bf01-40f1-bb87-c126a3f435f0",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d60a5e3d-5ef3-43bd-8497-bc03c4f5d798",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "aa7dae80-3b3d-47d1-9eb9-b9afa1aa9818",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "9be474a7-4f7f-415e-a777-e9aafca749c4",
			"key": "host",
			"value": "https://fremfi-casting-agency.herokuapp.com",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}